import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.preprocessing import StandardScaler
import json

with open('/content/DisasterDeclarationsSummaries.json', 'r') as f:
    json_data = json.load(f)

data = pd.json_normalize(json_data['DisasterDeclarationsSummaries'])
data['isFLOOD'] = data['incidentType'].apply(lambda x: 1 if x.lower() == 'flood' else 0)

X = data.drop(columns=['isFLOOD', 'incidentType'])
y = data['isFLOOD']

numeric_cols = X.select_dtypes(include=['number']).columns
X = X[numeric_cols]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

svm_model = SVC(kernel='linear', C=1.0, random_state=42)
svm_model.fit(X_train, y_train)

y_pred = svm_model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy * 100:.2f}%")

print("\nClassification Report:")
print(classification_report(y_test, y_pred))

print("\nConfusion Matrix:")
print(confusion_matrix(y_test, y_pred))
